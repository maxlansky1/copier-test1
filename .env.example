#.env.example

# ----------------------------------------
# Пример файла .env для проекта
# ----------------------------------------
# НЕ ХРАНИТЕ реальные секреты в этом файле!
# Скопируйте .env.example в .env и заполните реальные значения.
#
# Формат: KEY=VALUE
# Комментарии начинаются с #
# Пустые строки игнорируются
# ----------------------------------------

# --- Общие настройки ---
APP_NAME=MyApp                  # Название приложения, используется в логах, UI, метаданных
ENV=development                # Среда запуска: development, staging, production — влияет на поведение кода и конфиги
DEBUG=True                    # Включение отладочного режима (показывает ошибки, логи, автоперезагрузку)
PORT=8000                     # Порт, на котором запускается сервер/приложение

# --- Секреты и ключи (обязательные) ---
SECRET_KEY=your-secret-key-here   # Главный секрет приложения, используется для сессий, криптографии, шифрования
JWT_SECRET=your-jwt-secret-here   # Секретный ключ для создания и проверки JWT токенов (безопасность аутентификации)

# --- База данных ---
DB_ENGINE=postgresql           # Тип СУБД: postgresql, mysql, sqlite, oracle и др. (зависит от драйвера)
DB_HOST=localhost             # Адрес базы данных (IP или hostname)
DB_PORT=5432                  # Порт, на котором слушает база данных
DB_NAME=mydatabase            # Название базы данных для подключения
DB_USER=myuser                # Пользователь базы данных
DB_PASSWORD=mypassword        # Пароль пользователя БД (держите в секрете!)
DB_SSL_MODE=prefer            # Режим SSL: disable (без шифрования), require (обязательно), verify-ca (проверка сертификата) и т.д.

# --- Кэширование (Redis) ---
# Пример с паролем: redis://:password@localhost:6379/0
REDIS_URL=redis://localhost:6379/0   # URL подключения к Redis, включая протокол и номер базы
REDIS_PASSWORD=                      # Пароль Redis, если используется (оставьте пустым, если нет)

# --- Docker ---
DOCKER_ENV=development          # Контекст сборки/запуска Docker: dev (разработка) или prod (продакшен)
DOCKER_IMAGE_NAME=myapp-image  # Имя Docker-образа, который собирается
DOCKER_CONTAINER_NAME=myapp-container  # Имя контейнера для запуска

# --- Telegram Bot ---
TELEGRAM_BOT_TOKEN=your-telegram-bot-token   # Токен вашего Telegram-бота для доступа к API Telegram
TELEGRAM_CHAT_ID=your-chat-id-for-notifications  # ID чата для отправки уведомлений (ботом или другим сервисом)
TELEGRAM_ADMIN_IDS=123456789,987654321,1122334455 # Список id админов телеграм бота

# --- Google API ---
GOOGLE_API_KEY=your-google-api-key                 # Ключ API Google (например, для карт, аналитики и т.д.)
GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com  # OAuth Client ID для Google API
GOOGLE_CLIENT_SECRET=your-google-client-secret     # OAuth Client Secret для Google API
GOOGLE_REDIRECT_URI=http://localhost:8000/oauth2callback  # URL для редиректа после OAuth авторизации

# --- Email настройки ---
EMAIL_HOST=smtp.example.com       # SMTP сервер для отправки почты
EMAIL_PORT=587                    # Порт SMTP (обычно 587 для TLS, 465 для SSL)
EMAIL_HOST_USER=user@example.com  # Логин для SMTP аутентификации
EMAIL_HOST_PASSWORD=your-email-password  # Пароль для SMTP сервера
EMAIL_USE_TLS=True                # Использовать TLS (рекомендуется для безопасности)
EMAIL_USE_SSL=False               # Использовать SSL (альтернативный способ шифрования, не вместе с TLS)
EMAIL_DEFAULT_FROM=webmaster@example.com  # Адрес отправителя по умолчанию для исходящей почты

# --- Sentry (ошибки и мониторинг) ---
SENTRY_DSN=your-sentry-dsn-url    # URL для отправки ошибок в сервис мониторинга Sentry (для централизованного трекинга ошибок)

# --- Логирование ---
LOG_LEVEL=INFO                   # Уровень логирования: DEBUG, INFO, WARNING, ERROR, CRITICAL — регулирует объем логов

# --- API и внешние сервисы ---
API_SERVICE_URL=https://api.example.com    # Базовый URL внешнего API, с которым работает приложение
API_SERVICE_KEY=your-api-service-key       # Ключ доступа к внешнему API (часто токен)

# --- Другие ---
TIMEZONE=UTC                     # Часовой пояс приложения, используется для корректного отображения дат и времени
MAX_WORKERS=5                    # Максимальное количество потоков или процессов для параллельной работы

# --- Безопасность ---
# CORS_ALLOWED_ORIGINS указывается через запятую без пробелов
CORS_ALLOWED_ORIGINS=http://localhost,http://example.com  # Разрешённые источники для CORS (междоменные запросы)
SESSION_COOKIE_SECURE=False      # Отметка, что cookies сессии должны передаваться только по HTTPS (True для продакшена)
CSRF_COOKIE_SECURE=False         # Аналогично, флаг безопасности для CSRF cookie
